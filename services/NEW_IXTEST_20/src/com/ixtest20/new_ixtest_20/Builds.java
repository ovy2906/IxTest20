/*Copyright (c) 2017-2018 ixiacom.com All Rights Reserved.
 This software is the confidential and proprietary information of ixiacom.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with ixiacom.com*/
package com.ixtest20.new_ixtest_20;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Builds generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`BUILDS`")
public class Builds implements Serializable {

    private BigInteger buildid;
    private String buildnumber;
    @Type(type = "DateTime")
    private LocalDateTime builddate;
    private BigInteger productid;
    private BigInteger serverexpected;
    private String path;
    private BigInteger xmlVersion;
    private String anchornumber;
    private BigDecimal invalid;
    private Products products;
    private AssociatedApp associatedApp;
    private List<Engines> engineses = new ArrayList<>();
    private List<IopBuildApps> iopBuildAppses = new ArrayList<>();
    private List<IopSuite> iopSuites = new ArrayList<>();
    private List<Testcaserun> testcaseruns = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`BUILDID`", nullable = false, scale = 0, precision = 19)
    public BigInteger getBuildid() {
        return this.buildid;
    }

    public void setBuildid(BigInteger buildid) {
        this.buildid = buildid;
    }

    @Column(name = "`BUILDNUMBER`", nullable = true, length = 32)
    public String getBuildnumber() {
        return this.buildnumber;
    }

    public void setBuildnumber(String buildnumber) {
        this.buildnumber = buildnumber;
    }

    @Column(name = "`BUILDDATE`", nullable = true)
    public LocalDateTime getBuilddate() {
        return this.builddate;
    }

    public void setBuilddate(LocalDateTime builddate) {
        this.builddate = builddate;
    }

    @Column(name = "`PRODUCTID`", nullable = true, scale = 0, precision = 19)
    public BigInteger getProductid() {
        return this.productid;
    }

    public void setProductid(BigInteger productid) {
        this.productid = productid;
    }

    @Column(name = "`SERVEREXPECTED`", nullable = true, scale = 0, precision = 19)
    public BigInteger getServerexpected() {
        return this.serverexpected;
    }

    public void setServerexpected(BigInteger serverexpected) {
        this.serverexpected = serverexpected;
    }

    @Column(name = "`PATH`", nullable = true, length = 64)
    public String getPath() {
        return this.path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    @Column(name = "`XML_VERSION`", nullable = true, scale = 0, precision = 19)
    public BigInteger getXmlVersion() {
        return this.xmlVersion;
    }

    public void setXmlVersion(BigInteger xmlVersion) {
        this.xmlVersion = xmlVersion;
    }

    @Column(name = "`ANCHORNUMBER`", nullable = true, length = 32)
    public String getAnchornumber() {
        return this.anchornumber;
    }

    public void setAnchornumber(String anchornumber) {
        this.anchornumber = anchornumber;
    }

    @Column(name = "`INVALID`", nullable = true, scale = 9, precision = 22)
    public BigDecimal getInvalid() {
        return this.invalid;
    }

    public void setInvalid(BigDecimal invalid) {
        this.invalid = invalid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`PRODUCTID`", referencedColumnName = "`PRODUCTID`", insertable = false, updatable = false)
    public Products getProducts() {
        return this.products;
    }

    public void setProducts(Products products) {
        if(products != null) {
            this.productid = products.getProductid();
        }

        this.products = products;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`SERVEREXPECTED`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public AssociatedApp getAssociatedApp() {
        return this.associatedApp;
    }

    public void setAssociatedApp(AssociatedApp associatedApp) {
        if(associatedApp != null) {
            this.serverexpected = associatedApp.getId();
        }

        this.associatedApp = associatedApp;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "builds")
    public List<Engines> getEngineses() {
        return this.engineses;
    }

    public void setEngineses(List<Engines> engineses) {
        this.engineses = engineses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "builds")
    public List<IopBuildApps> getIopBuildAppses() {
        return this.iopBuildAppses;
    }

    public void setIopBuildAppses(List<IopBuildApps> iopBuildAppses) {
        this.iopBuildAppses = iopBuildAppses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "builds")
    public List<IopSuite> getIopSuites() {
        return this.iopSuites;
    }

    public void setIopSuites(List<IopSuite> iopSuites) {
        this.iopSuites = iopSuites;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "builds")
    public List<Testcaserun> getTestcaseruns() {
        return this.testcaseruns;
    }

    public void setTestcaseruns(List<Testcaserun> testcaseruns) {
        this.testcaseruns = testcaseruns;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Builds)) return false;
        final Builds builds = (Builds) o;
        return Objects.equals(getBuildid(), builds.getBuildid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getBuildid());
    }
}


/*Copyright (c) 2017-2018 ixiacom.com All Rights Reserved.
 This software is the confidential and proprietary information of ixiacom.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with ixiacom.com*/
package com.ixtest20.new_ixtest_20;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Chassis generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`CHASSIS`")
public class Chassis implements Serializable {

    private BigInteger chassisid;
    private String name;
    private List<Network> networks = new ArrayList<>();

    @Id
    @Column(name = "`CHASSISID`", nullable = false, scale = 0, precision = 19)
    public BigInteger getChassisid() {
        return this.chassisid;
    }

    public void setChassisid(BigInteger chassisid) {
        this.chassisid = chassisid;
    }

    @Column(name = "`NAME`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "chassis")
    public List<Network> getNetworks() {
        return this.networks;
    }

    public void setNetworks(List<Network> networks) {
        this.networks = networks;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Chassis)) return false;
        final Chassis chassis = (Chassis) o;
        return Objects.equals(getChassisid(), chassis.getChassisid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getChassisid());
    }
}


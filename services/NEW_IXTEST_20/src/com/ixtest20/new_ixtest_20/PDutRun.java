/*Copyright (c) 2017-2018 ixiacom.com All Rights Reserved.
 This software is the confidential and proprietary information of ixiacom.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with ixiacom.com*/
package com.ixtest20.new_ixtest_20;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PDutRun generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`P_DUT_RUN`")
public class PDutRun implements Serializable {

    private BigInteger id;
    private BigInteger dutid;
    private BigInteger runid;
    private BigDecimal invalid;
    private Testcaserun testcaserun;
    private Dut dut;

    @Id
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 19)
    public BigInteger getId() {
        return this.id;
    }

    public void setId(BigInteger id) {
        this.id = id;
    }

    @Column(name = "`DUTID`", nullable = true, scale = 0, precision = 19)
    public BigInteger getDutid() {
        return this.dutid;
    }

    public void setDutid(BigInteger dutid) {
        this.dutid = dutid;
    }

    @Column(name = "`RUNID`", nullable = true, scale = 0, precision = 19)
    public BigInteger getRunid() {
        return this.runid;
    }

    public void setRunid(BigInteger runid) {
        this.runid = runid;
    }

    @Column(name = "`INVALID`", nullable = true, scale = 9, precision = 22)
    public BigDecimal getInvalid() {
        return this.invalid;
    }

    public void setInvalid(BigDecimal invalid) {
        this.invalid = invalid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`RUNID`", referencedColumnName = "`TESTCASERUNID`", insertable = false, updatable = false)
    public Testcaserun getTestcaserun() {
        return this.testcaserun;
    }

    public void setTestcaserun(Testcaserun testcaserun) {
        if(testcaserun != null) {
            this.runid = testcaserun.getTestcaserunid();
        }

        this.testcaserun = testcaserun;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`DUTID`", referencedColumnName = "`DUTID`", insertable = false, updatable = false)
    public Dut getDut() {
        return this.dut;
    }

    public void setDut(Dut dut) {
        if(dut != null) {
            this.dutid = dut.getDutid();
        }

        this.dut = dut;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PDutRun)) return false;
        final PDutRun pdutRun = (PDutRun) o;
        return Objects.equals(getId(), pdutRun.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}


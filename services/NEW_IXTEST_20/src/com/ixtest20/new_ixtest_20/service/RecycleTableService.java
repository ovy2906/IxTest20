/*Copyright (c) 2017-2018 ixiacom.com All Rights Reserved.
 This software is the confidential and proprietary information of ixiacom.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with ixiacom.com*/
package com.ixtest20.new_ixtest_20.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.math.BigDecimal;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.ixtest20.new_ixtest_20.RecycleTable;

/**
 * Service object for domain model class {@link RecycleTable}.
 */
public interface RecycleTableService {

    /**
     * Creates a new RecycleTable. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on RecycleTable if any.
     *
     * @param recycleTable Details of the RecycleTable to be created; value cannot be null.
     * @return The newly created RecycleTable.
     */
	RecycleTable create(RecycleTable recycleTable);


	/**
	 * Returns RecycleTable by given id if exists.
	 *
	 * @param recycletableId The id of the RecycleTable to get; value cannot be null.
	 * @return RecycleTable associated with the given recycletableId.
     * @throws EntityNotFoundException If no RecycleTable is found.
	 */
	RecycleTable getById(BigDecimal recycletableId) throws EntityNotFoundException;

    /**
	 * Find and return the RecycleTable by given id if exists, returns null otherwise.
	 *
	 * @param recycletableId The id of the RecycleTable to get; value cannot be null.
	 * @return RecycleTable associated with the given recycletableId.
	 */
	RecycleTable findById(BigDecimal recycletableId);


	/**
	 * Updates the details of an existing RecycleTable. It replaces all fields of the existing RecycleTable with the given recycleTable.
	 *
     * This method overrides the input field values using Server side or database managed properties defined on RecycleTable if any.
     *
	 * @param recycleTable The details of the RecycleTable to be updated; value cannot be null.
	 * @return The updated RecycleTable.
	 * @throws EntityNotFoundException if no RecycleTable is found with given input.
	 */
	RecycleTable update(RecycleTable recycleTable) throws EntityNotFoundException;

    /**
	 * Deletes an existing RecycleTable with the given id.
	 *
	 * @param recycletableId The id of the RecycleTable to be deleted; value cannot be null.
	 * @return The deleted RecycleTable.
	 * @throws EntityNotFoundException if no RecycleTable found with the given id.
	 */
	RecycleTable delete(BigDecimal recycletableId) throws EntityNotFoundException;

	/**
	 * Find all RecycleTables matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
	 *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
	 *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching RecycleTables.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
	 */
    @Deprecated
	Page<RecycleTable> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Find all RecycleTables matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
	 *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching RecycleTables.
     *
     * @see Pageable
     * @see Page
	 */
    Page<RecycleTable> findAll(String query, Pageable pageable);

    /**
	 * Exports all RecycleTables matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
	 *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
	 */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the RecycleTables in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
	 * @return The count of the RecycleTable.
	 */
	long count(String query);


}

